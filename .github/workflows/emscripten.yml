name: Wasm with Emscripten

on:
  push:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libsdl2-dev libglew-dev

    - name: Install emsdk
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        git pull
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh
        echo "EMSDK=$EMSDK" >> $GITHUB_ENV
        echo "EM_CONFIG=$EM_CONFIG" >> $GITHUB_ENV
        echo "EMSDK_NODE =$EMSDK_NODE " >> $GITHUB_ENV

    - name: Configure CMake
      working-directory: ${{github.workspace}}/wasm/
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: ${{ env.EMSDK }}/upstream/emscripten/emcmake cmake -B ${{github.workspace}}/wasm/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      working-directory: ${{github.workspace}}/wasm/build
      # Build your program with the given configuration
      run: ${{ env.EMSDK }}/upstream/emscripten/emmake make

    - name: Deploy to Github Pages
      working-directory: ${{github.workspace}}/wasm
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "harscoet.quentin@gmail.com"
        git checkout -B "gh-pages"
        git add ./build/gb_wasm*
        git commit -m "Build & Push wasm files"
        git push --set-upstream origin gh-pages
